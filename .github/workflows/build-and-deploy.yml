name: Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    runs-on: ubuntu-latest
    needs: [build-and-push-image]
    environment:
      name: production
      url: https://legacy.triofan.com
    env:
      DOCKER_HOST: ${{ secrets.DOCKER_HOST }}
      DOCKER_TLS_VERIFY: 1
      SWARM_TLSCACERT: ${{ secrets.SWARM_TLSCACERT }}
      SWARM_TLSCERT: ${{ secrets.SWARM_TLSCERT }}
      SWARM_TLSKEY: ${{ secrets.SWARM_TLSKEY }}
    steps:
      - uses: actions/checkout@v2
      - run: mkdir -p ~/.docker
      - run: echo "$SWARM_TLSCACERT" > ~/.docker/ca.pem
      - run: echo "$SWARM_TLSCERT" > ~/.docker/cert.pem
      - run: echo "$SWARM_TLSKEY" > ~/.docker/key.pem
      - run: echo "${{ secrets.CR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - run: docker stack deploy -c docker-compose.yml legacy --with-registry-auth
